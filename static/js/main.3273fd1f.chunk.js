(this["webpackJsonpsorting-algorithm-visualizer"]=this["webpackJsonpsorting-algorithm-visualizer"]||[]).push([[0],{79:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(8),o=n.n(a),i=n(12),s=n(106),l=n(107),c=n(109),d=n(110),h=n(114),u=n(116),p=n(34),b=n.n(p),g=n(17),f=n.n(g),j=n(27),m=n.n(j),O=n(2),v=Object(s.a)((function(e){return{horizontalStretch:{display:"grid",backgroundColor:"".concat(m.a[900]),gridTemplateColumns:"1fr auto auto auto"}}})),x=function(e){var t=e.algorithm,n=e.listOfAlgorithms,a=e.algorithmSelected,o=e.dataSize,s=e.listOfDataSizes,p=e.dataSizeSelected,g=e.shuffleData,j=v(),m=Object(r.useState)(null),x=Object(i.a)(m,2),y=x[0],w=x[1],S=Object(r.useState)(null),k=Object(i.a)(S,2),C=k[0],z=k[1],I=function(){w(null)};var T=function(){z(null)};return Object(O.jsx)("div",{className:j.root,style:{height:"64px"},children:Object(O.jsx)(l.a,{position:"fixed",children:Object(O.jsxs)(c.a,{className:j.horizontalStretch,children:[Object(O.jsx)("div",{children:Object(O.jsx)(d.a,{color:"inherit",className:j.title,children:"Sorting Algorithm Visualizer"})}),Object(O.jsxs)("div",{style:{alignContent:"center"},children:[Object(O.jsxs)(d.a,{style:{textTransform:"none"},color:"inherit","aria-label":"menu","aria-controls":"simple-menu","aria-haspopup":"true",onClick:function(e){w(e.currentTarget)},children:[t||"Algorithm",Object(O.jsx)(b.a,{})]}),Object(O.jsx)(h.a,{id:"simple-menu",style:{margin:"0",padding:"0"},anchorEl:y,getContentAnchorEl:null,anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"},keepMounted:!0,open:Boolean(y),onClose:I,children:n.map((function(e,t){return Object(O.jsx)(u.a,{onMouseEnter:function(e){return e.target.style.backgroundColor="".concat(f.a[600])},onMouseLeave:function(e){return e.target.style.backgroundColor="#ffffff"},onClick:function(){return function(e){a(e),I()}(t)},children:e},t)}))})]}),Object(O.jsxs)("div",{style:{alignContent:"center"},children:[Object(O.jsxs)(d.a,{style:{textTransform:"none"},color:"inherit","aria-label":"menu","aria-controls":"simple-menu","aria-haspopup":"true",onClick:function(e){z(e.currentTarget)},children:[o," Elements",Object(O.jsx)(b.a,{})]}),Object(O.jsx)(h.a,{id:"simple-menu",anchorEl:C,getContentAnchorEl:null,anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"},keepMounted:!0,open:Boolean(C),onClose:T,children:s.map((function(e,t){return Object(O.jsx)(u.a,{onMouseEnter:function(e){return e.target.style.backgroundColor="".concat(f.a[600])},onMouseLeave:function(e){return e.target.style.backgroundColor="#ffffff"},onClick:function(){return function(e){p(e),T()}(t)},children:e},t)}))})]}),Object(O.jsx)(d.a,{color:"inherit",variant:"outlined",style:{textTransform:"none"},onClick:function(){return g()},children:"Shuffle Data"})]})})})},y=n(115),w=n(47),S=n.n(w),k=function(e){var t=e.value,n=e.width,r=e.dataSize,a=e.color,o=e.windowSize,i={dataBar:{backgroundColor:"".concat(a||S.a[600]),height:"".concat("".concat(r<10?10*t/100*100:r<25?10*t/250*100:25===r?4.6*t/250*100:50===r?4.6*t/500*100:2.3*t/500*100,"%")),width:"".concat(n),display:"flex",flexDirection:"column reverse",alignItems:"flex-end",transition:"125ms ease-in-out",transform:"".concat(o>750?"rotatex(180deg) translate3d(0, -400px, 0)":"rotatex(180deg) translate3d(0, -325px, 0)"," "),transformOrigin:"top"}};return Object(O.jsx)(y.a,{className:"data-bar",style:i.dataBar})},C=function(e){var t=e.data,n=e.comparing,a=e.sorted,o=e.swapped,s=e.barWidth,l=Object(r.useState)(window.innerWidth),c=Object(i.a)(l,2),d=c[0],h=c[1];return window.addEventListener("resize",(function(){return h(window.innerWidth)})),Object(O.jsx)("div",{style:{display:"flex",flexDirection:"row",width:"100%",gridGap:"1%"},children:t?t.map((function(e,r){var i=function(e){return n&&n.includes(e)?"yellow":o&&o.includes(e)?"red":a&&a.includes(e)?"".concat(f.a[600]):null}(r);return Object(O.jsx)(k,{value:e,width:s,color:i,dataSize:t.length,windowSize:d},r)})):null})},z=n(111),I=n(112),T=n(113),E=Object(s.a)({root:{minWidth:250,overflowY:"scroll"},title:{fontSize:16},pos:{}}),M=function(e){var t=e.algoName,n=e.algoDescription,r=e.average,a=e.best,o=e.worst,i=E();return Object(O.jsx)(z.a,{className:i.root,children:Object(O.jsxs)(I.a,{children:[Object(O.jsxs)(T.a,{variant:"h4",component:"h2",children:[t||"Select Algorithm",Object(O.jsx)("br",{})]}),Object(O.jsx)("br",{}),Object(O.jsxs)(T.a,{variant:"body2",component:"p",children:[n||"You must select an algorithm in order to visualize how it sorts the data",Object(O.jsx)("br",{})]}),Object(O.jsx)("br",{}),Object(O.jsxs)(T.a,{variant:"h6",component:"h4",children:["Performance",Object(O.jsx)("br",{})]}),Object(O.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr"},children:[Object(O.jsxs)(T.a,{variant:"body2",component:"p",children:["Best",Object(O.jsx)("br",{}),"Average",Object(O.jsx)("br",{}),"Worst"]}),Object(O.jsxs)(T.a,{variant:"body2",component:"p",style:{fontStyle:"italics"},children:[a,Object(O.jsx)("br",{}),r,Object(O.jsx)("br",{}),o]})]})]})})},A=n(54),B=n.n(A),N=function(e){var t=e.color,n=e.colorKey,r={orb:{color:"".concat(t)},layout:{display:"inline-grid",gridTemplateColumns:"auto auto",gridGap:"5px",padding:"8px",alignItems:"center",color:"white",fontFamily:"Roboto"}};return Object(O.jsxs)("div",{style:r.layout,children:[Object(O.jsx)(B.a,{style:r.orb}),Object(O.jsx)(T.a,{children:n})]})},D=n(55),W=n.n(D),R=n(56),G=n.n(R),L=function(e){var t=e.handleNextButton,n=e.handlePrevButton,a=e.sortButton,o=e.colorKeys,s=e.trackerStep,l=e.trackerSize,c=e.speed,p=e.listOfSpeeds,g=e.handleSpeedSelected,j={speed:{},layout:{display:"grid",gridTemplateColumns:"1fr",gridGap:"15px",alignItems:"center",justifySelf:"center"},buttons:{display:"flex",justifySelf:"center",alignSelf:"center",justifyContent:"center",color:"white"}},m=Object(r.useState)(null),v=Object(i.a)(m,2),x=v[0],y=v[1],w=function(){y(null)};return Object(O.jsxs)("div",{style:j.layout,children:[Object(O.jsxs)("div",{style:j.buttons,children:[Object(O.jsx)(T.a,{style:{color:"white",alignSelf:"center"},children:l?"".concat(Math.floor(s/l*100),"%"):"0%"}),Object(O.jsx)(d.a,{children:Object(O.jsx)(W.a,{style:{color:"white"},onClick:function(){return n()}})}),Object(O.jsx)(d.a,{color:"inherit",variant:"outlined",style:{color:"white"},onClick:function(){return a()},children:"SORT"}),Object(O.jsx)(d.a,{onClick:function(){return t()},children:Object(O.jsx)(G.a,{style:{color:"white"}})}),Object(O.jsxs)("div",{style:{alignContent:"center"},children:[Object(O.jsxs)(d.a,{style:{textTransform:"none"},color:"inherit","aria-label":"menu","aria-controls":"simple-menu","aria-haspopup":"true",onClick:function(e){y(e.currentTarget)},children:[c,"x",Object(O.jsx)(b.a,{})]}),Object(O.jsx)(h.a,{id:"simple-menu",style:{margin:"0",padding:"0"},anchorEl:x,getContentAnchorEl:null,anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"},keepMounted:!0,open:Boolean(x),onClose:w,children:p.map((function(e,t){return Object(O.jsxs)(u.a,{onMouseEnter:function(e){return e.target.style.backgroundColor="".concat(f.a[600])},onMouseLeave:function(e){return e.target.style.backgroundColor="#ffffff"},onClick:function(){return function(e){w(),g(e)}(t)},children:[e,"x"]},t)}))})]})]}),Object(O.jsx)("div",{children:o.map((function(e,t){return Object(O.jsx)(N,{colorKey:e.key,color:e.color},t)}))})]})},F=n(5);function Y(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function K(e){for(var t=2*e,n=new Set,r=[];r.length!==e;){var a=Math.floor(Math.random()*t);!n.has(a)&&0!==a&&a>=.1*t&&(n.add(a),r.push(a))}return r}function P(e){for(var t=[],n=0;n<e;n++)t.push(n);return t}function q(e){return{steps:[{array:e,sortedIndices:[],comparing:[],swapped:[],stepDescription:"added list to tracker"}]}}function H(e,t,n,r,a,o){var i={array:t,sortedIndices:r,comparing:n,swapped:a,stepDescription:o};e.steps.push(i)}function J(e,t,n,r,a){if(r<a){var o=function(e,t,n,r,a){var o=r,i=e[o];H(t,Object(F.a)(e),[o],Object(F.a)(n),[],"adding pivot to tracker. Pivot VALUE: ".concat(i));var s=o+1,l=a;for(;s<l;){for(;e[s]<i;)H(t,Object(F.a)(e),[o,s],Object(F.a)(n),[],"incrementing i"),e[++s]>i&&H(t,Object(F.a)(e),[o],Object(F.a)(n),[s],"next i value breaks while loop, value at i is GREATER than pivot");for(;e[l]>i;)H(t,Object(F.a)(e),[o,l],Object(F.a)(n),[],"incrementing j"),e[--l]<i&&H(t,Object(F.a)(e),[o],Object(F.a)(n),[l],"next j value breaks while loop, value at j is LESS than pivot");H(t,Object(F.a)(e),[o,s,l],Object(F.a)(n),[],"after i and j increment"),s<l&&(Y(e,s,l),H(t,Object(F.a)(e),[o],Object(F.a)(n),[s,l],"swapped i and j"))}e[l]<i&&Y(e,l,o);return l}(e,t,n,r,a);n.push(o),H(t,Object(F.a)(e),[],Object(F.a)(n),[],"post partition"),J(e,t,n,r,o-1),J(e,t,n,o+1,a)}else n.push(r),H(t,Object(F.a)(e),[],Object(F.a)(n),[],"base case, only one element - add to sorted")}function Q(e,t,n,r,a){if(e.length>1){for(var o=e.slice(0,e.length/2),i=e.slice(e.length/2,e.length),s=[],l=r;l<=a;l++)s.push(l);H(t,Object(F.a)(n),s,[],[],"list passed to merge sort"),Q(o,t,n,r,r+o.length-1),Q(i,t,n,r+o.length,a),function(e,t,n,r,a,o){for(var i=0,s=0,l=o,c=0;c<e.length;c++)s>=n.length||t[i]<n[s]&&i<t.length?(e[c]=t[i],i++,a[l++]=e[c]):(e[c]=n[s],s++,a[l++]=e[c]),H(r,Object(F.a)(a),[],[],[l-1],"overwrite from new array a")}(e,o,i,t,n,r),H(t,Object(F.a)(n),[],[],[],"merged")}}var U=[{name:"Bubble Sort",description:"Bubble sort is a simple sorting algorithm that compares adjacent elements and swaps them if they are in the wrong order. It sorts from right to left, with each pass of the algorithm grabbing the next-highest value in the list until the entire list is sorted. It is called bubble sort because of the way the algorithm makes the largest/smallest values bubble up to the end of the list depending on which orientation the user desires the list to be in (ascending/descending).",performance:{best:"O(n)",average:"O(n^2)",worst:"O(n^2)"},index:0},{name:"Selection Sort",description:"Selection sort is an in-place comparison sorting algorithm that divides the input list into two parts: the sublist of items already sorted, which is built up from left to right at the front (left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.",performance:{best:"O(n^2)",average:"O(n^2)",worst:"O(n^2)"},index:1},{name:"Insertion Sort",description:"Insertion sort is a simple sorting algorithm that iterates through an array and at each iteration it removes one element from the array, finds the location it belongs to in the sorted list and inserts it there, repeating until no elements remain in the unsorted list. It is an in-place, stable sorting algorithm that is inefficient on large input arrays but works well for data sets that are almost sorted. It is more efficient in practice compared to other quadratic sorting algorithms like bubble sort and selection sort.",performance:{best:"O(n)",average:"O(n^2)",worst:"O(n^2)"},index:2},{name:"Quick Sort",description:"Quick sort runs on the basis of sorting elements around a pivot that can be randomly selected, or at the beginning/end of the array. At each call of the algorithm, the array is partitioned in two by swapping all elements smaller than the pivot with elements larger than the pivot, then swapping the pivot with the largest element that is smaller than the pivot. This effectively places the pivot in its final sorted position since all the elements are smaller and all elements after are greater. This method is called recursively with the remaining subarrays until all elements are sorted. It is the most popular sorting algorithm that handles relatively small data sizes incredibly well. In this variation of quick sort, the first element is selected as the pivot and then two pointers iterate through the rest of the subarray, one from the left, one from the right. Both pointers iterate into one another until they reach a value that is unsorted  relative to the pivot, or the pointers cross. For the left pointer, it will stop when it reaches a value that is greater than the pivot, and the right pointer will stop when it reaches a value that is less than the pivot. Once the pointers stop the values will be swapped, and the pointers continue.",performance:{best:"O(nlog n)",average:"O(nlog n)",worst:"O(n^2)"},index:3},{name:"Merge Sort",description:"Merge sort is a recursive sorting algorithm that handles large data very efficiently by using the divide and conquer method. It runs on the idea of merging two lists that are each sorted relative to itself. Imagine you have two stacks of papers that are both alphabetically ordered and you want to combine the two stacks to be alphabetically ordered. You look at the top two papers and grab the earlier one in the alphabet and place it in a third pile. You then grab the next paper from the stack whose top paper you just put on the third pile and compare it to the other paper that you grabbed at first and continue this until one stack runs out. At this point you can put the rest of the remaining stack on the third pile and you have merged the stacks. Merge sort works on a similar principle by continually making subarrays within the list and merging them until you get the final sorted list.",performance:{best:"O(nlog n)",average:"O(nlog n)",worst:"O(nlog n)"},index:4}],V=[function(e){for(var t=q(Object(F.a)(e)),n=[],r=e.length-1;r>=1;r--){r<e.length-1&&(n.push(r+1),H(t,Object(F.a)(e),[],[].concat(n),[],"last known sorted el is less than the end"));for(var a=0;a<r;a++)H(t,Object(F.a)(e),[a,a+1],[].concat(n),[],"new iteration of i"),e[a]>e[a+1]&&(Y(e,a,a+1),H(t,Object(F.a)(e),[],[].concat(n),[a,a+1],"AFTEr swapping"))}for(;e.length!==n.length;)n.push(e.length-n.length-1);return H(t,e,[],n,[],"FINISHED SORTING"),t},function(e){for(var t=q(Object(F.a)(e)),n=[],r=-1;r<e.length;r++){var a=r+1;r>-1&&(n.push(r),H(t,Object(F.a)(e),[],[].concat(n),[],"after one pass of the algorithm"));for(var o=r+1;o<e.length;o++)H(t,Object(F.a)(e),[o,a],[].concat(n),[],"increment of i, comparing inner loop values to selected value"),e[o]<e[a]&&(Y(e,o,a),H(t,Object(F.a)(e),[],[].concat(n),[o,a],"lowest value swapped with beginning of last known sorted index"))}return H(t,e,[],n,[],"FINISHED SORTING"),t},function(e){for(var t=q(Object(F.a)(e)),n=1;n<e.length;n++){var r=n;for(n>1&&H(t,Object(F.a)(e),[],[],[],"element inserted to virutal sorted list");e[r]<e[r-1]&&r>0;)H(t,Object(F.a)(e),[r,r-1],[],[],"comparing two elements"),Y(e,r,r-1),H(t,Object(F.a)(e),[],[],[r,r-1],"swapped two elements"),r--}return H(t,e,[],P(e.length),[],"finished sorting"),t},function(e){var t=q(Object(F.a)(e));return J(e,t,[],0,e.length-1),H(t,e,[],P(e.length),[],"sorted list"),t},function(e){var t=q(Object(F.a)(e));return Q(e,t,Object(F.a)(e),0,e.length-1),H(t,e,[],P(e.length),[],"finished sorting"),t}],X=U.map((function(e){return e.name})),Z=["5","10","25","50","100"],$=["0.25","0.5","1.0","2.0","4.0"],_=[{key:"Unsorted",color:"".concat(S.a[600])},{key:"Comparing",color:"yellow"},{key:"Swapped",color:"red"},{key:"Sorted",color:"".concat(f.a[600])}],ee=function(){var e={overlay:{backgroundColor:"".concat(m.a[900]),position:"fixed",width:"100%",height:"100%",display:"grid"},layout:{display:"grid",gridTemplateColumns:"5fr 2fr",gridGap:"50px",height:"500px",padding:"0px 50px 50px 50px"},sortWindowAndControls:{display:"grid",gridTemplateRows:"10fr 1fr",height:"525px",width:"100%",borderRadius:"10px",padding:"15px",backgroundColor:"".concat(m.a[800]),color:"".concat(f.a[600])},layoutMobile:{display:"grid",gridTemplateColumns:"1fr",gridGap:"10px",height:"100%",padding:"30px 15px 15px 15px",overflowY:"scroll"},sortWindowAndControlsMobile:{display:"grid",gridTemplateRows:"8fr 1fr",gridGap:"10px",height:"480px",borderRadius:"10px",padding:"15px",backgroundColor:"".concat(m.a[800]),color:"".concat(f.a[600])}},t=Object(r.useState)({name:"",description:"",performance:{best:"",average:"",worst:""},index:null}),n=Object(i.a)(t,2),a=n[0],o=n[1],s=Object(r.useState)("10"),l=Object(i.a)(s,2),c=l[0],d=l[1],h=Object(r.useState)(null),u=Object(i.a)(h,2),p=u[0],b=u[1],g=Object(r.useState)(""),j=Object(i.a)(g,2),v=j[0],y=j[1],w=Object(r.useState)({steps:[]}),S=Object(i.a)(w,2),k=S[0],z=S[1],I=Object(r.useState)(0),T=Object(i.a)(I,2),E=T[0],A=T[1],B=Object(r.useState)({array:[],comparing:[],sortedIndices:[],swapped:[]}),N=Object(i.a)(B,2),D=N[0],W=N[1],R=Object(r.useState)(null),G=Object(i.a)(R,2),F=G[0],Y=G[1],P=Object(r.useState)($[2]),q=Object(i.a)(P,2),H=q[0],J=q[1],Q=Object(r.useState)(window.innerWidth),ee=Object(i.a)(Q,2),te=ee[0],ne=ee[1];function re(){switch(parseInt(c)){case 5:return"20%";case 10:return"10%";case 25:return"4%";case 50:return"2%";case 100:return"1%";default:return"5%"}}function ae(e,t){var n;n=null===a.index||e!==a.index?V[e](t):V[a.index](t),z(n),Y(n.steps[n.steps.length-1].array),W(n.steps[0])}return Object(r.useEffect)((function(){d("10"),b(K(10)),W(null),ne()}),[]),Object(r.useEffect)((function(){y(re())}),[c]),window.addEventListener("resize",(function(){return ne(window.innerWidth)})),Object(O.jsxs)("div",{style:e.overlay,children:[Object(O.jsx)(x,{algorithm:a.name,listOfAlgorithms:X,algorithmSelected:function(e){o(U[e]),ae(e,D?D.array:p)},dataSize:c,listOfDataSizes:Z,dataSizeSelected:function(e){W(null),d(Z[e]),y(re());var t=K(parseInt(Z[e]));A(0),b(t),null!==a.index&&ae(a.index,t)},shuffleData:function(){W(null),A(0);var e=K(parseInt(c));b(e),null!==a.index&&ae(a.index,e)}}),Object(O.jsxs)("div",{className:"layout",style:te<770?e.layoutMobile:e.layout,children:[Object(O.jsxs)("div",{className:"sort-window-and-controls",style:te<770?e.sortWindowAndControlsMobile:e.sortWindowAndControls,children:[Object(O.jsx)(C,{data:D?D.array:p,comparing:D?D.comparing:null,swapped:D?D.swapped:null,sorted:D?D.sortedIndices:null,barWidth:v}),Object(O.jsx)(L,{handleNextButton:function(){D!==F&&(A(E+1),W(k.steps[E+1]))},handlePrevButton:function(){D!==p&&(A(E-1),W(k.steps[E-1]))},sortButton:function(){var e=k.steps.filter((function(e,t){return t>=E}));e.forEach((function(t,n){setTimeout((function(){W(t),A(E++),n===e.length-1&&A(E++)}),1/H*150*n)})),A(k.steps.length)},colorKeys:_,trackerSize:k.steps.length,trackerStep:E,speed:H,listOfSpeeds:$,handleSpeedSelected:function(e){J($[e])}})]}),Object(O.jsx)(M,{algoName:a.name,algoDescription:a.description,average:a.performance.average,best:a.performance.best,worst:a.performance.worst})]})]})};o.a.render(Object(O.jsx)(ee,{}),document.getElementById("root"))}},[[79,1,2]]]);
//# sourceMappingURL=main.3273fd1f.chunk.js.map